// Runtime: 24 ms, faster than 100.00% of Go online submissions for Search in a Binary Search Tree.
//Memory Usage: 6.6 MB, less than 14.29% of Go online submissions for Search in a Binary Search Tree.

// https://leetcode.com/problems/search-in-a-binary-search-tree/submissions/
// 递归解决，bst的特点是left叶子节点的值小于等于root节点，右叶子节点的值小于等于root节点

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func searchBST(root *TreeNode, val int) *TreeNode {
    if root == nil {
        return root
    }
    
    if root.Val == val {
        return root
    }
    
    if val < root.Val {
        return searchBST(root.Left, val)
    } else {
        return searchBST(root.Right, val)
    }
    
    
}